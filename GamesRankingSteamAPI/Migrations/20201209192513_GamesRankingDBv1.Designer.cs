// <auto-generated />
using System;
using GamesRankingSteamAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GamesRankingSteamAPI.Migrations
{
    [DbContext(typeof(gamesrankdbContext))]
    [Migration("20201209192513_GamesRankingDBv1")]
    partial class GamesRankingDBv1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GamesRankingSteamAPI.Models.Games", b =>
                {
                    b.Property<long?>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int?>("Pegi")
                        .HasColumnName("PEGI")
                        .HasColumnType("int");

                    b.Property<string>("Summary")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnName("URL")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("GameId")
                        .HasName("PRIMARY");

                    b.ToTable("games");
                });

            modelBuilder.Entity("GamesRankingSteamAPI.Models.Genres", b =>
                {
                    b.Property<long?>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("GamesGameId")
                        .HasColumnName("games_GameId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(60)")
                        .HasMaxLength(60);

                    b.Property<long?>("Top15interestinggamesGameId")
                        .HasColumnName("top15interestinggames_GameId")
                        .HasColumnType("bigint");

                    b.HasKey("GenreId")
                        .HasName("PRIMARY");

                    b.HasIndex("GamesGameId")
                        .HasName("fk_genres_games_idx");

                    b.HasIndex("Top15interestinggamesGameId")
                        .HasName("fk_genres_top15interestinggames1_idx");

                    b.ToTable("genres");
                });

            modelBuilder.Entity("GamesRankingSteamAPI.Models.Top10populargames", b =>
                {
                    b.Property<long?>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<double?>("Rating")
                        .HasColumnType("double");

                    b.Property<int?>("RatingCount")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("date");

                    b.HasKey("GameId")
                        .HasName("PRIMARY");

                    b.ToTable("top10populargames");
                });

            modelBuilder.Entity("GamesRankingSteamAPI.Models.Top15interestinggames", b =>
                {
                    b.Property<long?>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("FirstReleaseDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("date");

                    b.Property<string>("Url")
                        .HasColumnName("URL")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("GameId")
                        .HasName("PRIMARY");

                    b.ToTable("top15interestinggames");
                });

            modelBuilder.Entity("GamesRankingSteamAPI.Models.Genres", b =>
                {
                    b.HasOne("GamesRankingSteamAPI.Models.Games", "GamesGame")
                        .WithMany("Genres")
                        .HasForeignKey("GamesGameId")
                        .HasConstraintName("fk_genres_games");

                    b.HasOne("GamesRankingSteamAPI.Models.Top15interestinggames", "Top15interestinggamesGame")
                        .WithMany("Genres")
                        .HasForeignKey("Top15interestinggamesGameId")
                        .HasConstraintName("fk_genres_top15interestinggames1");
                });
#pragma warning restore 612, 618
        }
    }
}
